subprojects {
    apply plugin: 'java'
    apply plugin: 'pmd'
    apply plugin: 'checkstyle'
    apply plugin: 'jacoco'

    group = 'com.predictx.deployment'
    version = '1.0.0-SNAPSHOT'

    repositories {
        mavenCentral()
        maven { url "http://nexus3.pibenchmark.com/nexus/repository/maven-central" }
        maven { url "http://nexus3.pibenchmark.com/nexus/repository/maven-releases" }
        maven { url "http://nexus3.pibenchmark.com/nexus/repository/maven-snapshots" }
    }

    dependencies {
        testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
        testCompile 'org.codehaus.groovy:groovy-all:2.4.15'
    }

    sourceCompatibility = 1.8

    checkstyleMain {
        version = "8.11"
        ignoreFailures = false
        configFile = rootProject.file("config/kotlin/checkstyle/checkstyle.xml")
    }
    checkstyleTest {
        version = "8.11"
        ignoreFailures = false
        configFile = rootProject.file("config/kotlin/checkstyle/checkstyle.xml")
    }

    jacoco {
        toolVersion = "0.8.1"
        reportsDir = file("$buildDir/reports")
    }

    jacocoTestCoverageVerification {
        dependsOn(jacocoTestReport)
        violationRules {
            failOnViolation = true
            rule {
                enabled = true
                element = 'CLASS'
                excludes = ['*Exception', '*Application']

                limit {
                    counter = 'LINE'
                    value = 'COVEREDRATIO'
                    minimum = 0.95
                }
                limit {
                    counter = 'BRANCH'
                    value = 'COVEREDRATIO'
                    minimum = 0.70
                }
            }
        }
    }
    jacocoTestReport {
        reports {
            xml.enabled = false
            html.enabled = true
        }
    }

    pmdMain {
        version = '4.10'
        ignoreFailures = false
        ruleSetConfig = rootProject.resources.text.fromFile("config/kotlin/pmd/ruleset.xml")
        reports {
            xml.enabled = false
            html.enabled = true
        }
    }

    check.dependsOn(checkstyleMain, pmdMain, jacocoTestCoverageVerification)
}

configure(subprojects.findAll()) {
    test {
        onlyIf {
            !(project.name =~ /.*-test.*/)
        }
    }
}

